mixin TwoColumns (one = "*", two = "*") for Grid {
  combine ColumnDefinitions: [
    ColumnDefinition { Width: $one }
    ColumnDefinition { Width: $two }
  ]
}

mixin ThreeColumns (one = none, two = none, three = none) for Grid {
  #TwoColumns($one, $two)
  combine ColumnDefinitions: ColumnDefinition { Width: $three }
}

mixin FourColumns (one = none, two = none, three = none, four = none) for Grid {
  #ThreeColumns($one, $two, $three)
  combine ColumnDefinitions: ColumnDefinition { Width: $four }
}

mixin FiveColumns (one = none, two = none, three = none, four = none, five = none) for Grid {
  #FourColumns($one, $two, $three, $four)
  combine ColumnDefinitions: ColumnDefinition { Width: $five }
}

mixin TwoRows (one = none, two = none) for Grid
{
  combine RowDefinitions: [
    RowDefinition { Height: $one }
    RowDefinition { Height: $two }
  ]
}

mixin ThreeRows (one = none, two = none, three = none) for Grid
{
  #TwoRows($one, $two)
  combine RowDefinitions: RowDefinition { Height: $three }
}

mixin FourRows (one = none, two = none, three = none, four = none) for Grid
{
  #ThreeRows($one, $two, $three)
  combine RowDefinitions: RowDefinition { Height: $four }
}

mixin FiveRows (one = none, two = none, three = none, four = none, five = none) for Grid
{
  #FourRows($one, $two, $three, $four)
  combine RowDefinitions: RowDefinition { Height: $five }
}

mixin Cell (row = none, column = none, rowSpan = none, columnSpan = none) for Element {
  Grid.Row: $row
  Grid.Column: $column
  Grid.RowSpan: $rowSpan
  Grid.ColumnSpan: $columnSpan
}

mixin Setter(property, value, targetName=none) for Style {
  Setter { Property: $property, Value: $value }
}

/*
mixin AddSetter(property, value, targetName=none) for Style {
  combine Setters: #Setter($property, $value, $targetName) {}
}*/

alias DataTrigger(binding, bindingValue) {
  DataTrigger { Binding: $binding, Value: $bindingValue }
}

alias Trigger(property, value) {
  Trigger { Property: $property, Value: $value }
}

alias DataTrigger_SetProperty(binding, bindingValue, property, propertyValue) {
  @DataTrigger ($binding, $bindingValue) {
    #Setter($property, $propertyValue)
  }
}

alias Trigger_SetProperty(triggerProperty, triggerValue, property, propertyValue) {
  @Trigger ($triggerProperty, $triggerValue) {
    #Setter($property, $propertyValue)
  }
}

alias VisibleIf_DataTrigger(binding, valueForVisible) {
  @DataTrigger_SetProperty($binding, $valueForVisible, "Visibility", "Visible") {}
}

alias CollapsedIf_DataTrigger(binding, valueForCollapsed) {
  @DataTrigger_SetProperty($binding, $valueForCollapsed, "Visibility", "Collapsed") {}
}

alias StackPanelHorizontal() {
  StackLayout {
    Orientation: Horizontal
  }
}

mixin Property_OnBinding(binding, bindingValue, property, propertyValue, initialValue) for Style {
  #Setter("Visibility", $initialValue)
  combine Triggers: [
    @DataTrigger_SetProperty($binding, $bindingValue, $property, $propertyValue) {}
  ]
}

mixin Visibility_OnBinding(binding, bindingValue, visibilityValue="Visible", initialValue="Collapsed") for Style {
  #Property_OnBinding($binding, $bindingValue, "Visibility", $visibilityValue, $initialValue)
}